/**\mainpage Auto-generated Documentation
```doxygen
/*! \mainpage Project Documentation

\section intro_sec Introduction
This documentation provides an overview of the project's architecture and key components. 
It is designed to help developers understand the flow of execution, the relationships between different parts of the system, and the overall structure of the codebase.

\section arch_sec Architecture Overview

This section describes the high-level architecture of the project.
The project follows a Model-View-Controller (MVC) architectural pattern to separate concerns and improve code maintainability. 
The core components include Controllers, Models, Views, and Services, which interact to handle user requests and manage data.
@dot
digraph MVC {
    rankdir="TD" // Top-down layout
    node [shape=box];

    subgraph cluster_Controllers {
        label = "Controllers";
        style = "filled";
        color = "#CCCCFF";

        AdminController [label="AdminController", URL="@ref AdminController"];
        FacultyController [label="FacultyController", URL="@ref FacultyController"];
    }

    subgraph cluster_Models {
        label = "Models";
        style = "filled";
        color = "#CCFFCC";

        Admin [label="Admin", URL="@ref admin"];
        Faculty [label="Faculty", URL="@ref faculty"];
    }

    subgraph cluster_Views {
        label = "Views";
        style = "filled";
        color = "#FFCCCC";

        AdminView [label="Admin Views\n(e.g., AdminLogin.cshtml)"];
        FacultyView [label="Faculty Views\n(e.g., FacultyLogin.cshtml)"];
    }

    subgraph cluster_Services {
        label = "Services";
        style = "filled";
        color = "#FFFFCC";

        AdminService [label="AdminService"];
        FacultyService [label="FacultyService"];
        AuthenticationService [label="AuthenticationService"];
    }


    // Define Relationships

    //Controller -> Model
    AdminController -> Admin [label="Uses", style="dashed"];
    FacultyController -> Faculty [label="Uses", style="dashed"];


    // Controller -> View
    AdminController -> AdminView [label="Renders"];
    FacultyController -> FacultyView [label="Renders"];


    //Controller -> Service
    AdminController -> AdminService [label="Uses"];
    FacultyController -> FacultyService [label="Uses"];
    AdminController -> AuthenticationService [label="Authenticates"];
    FacultyController -> AuthenticationService [label="Authenticates"];


    //Service -> Model
    AdminService -> Admin [label="Manages", style="dashed"];
    FacultyService -> Faculty [label="Manages", style="dashed"];
    AuthenticationService -> Admin [label="Validates", style="dashed"];
    AuthenticationService -> Faculty [label="Validates", style="dashed"];
}
@enddot

\section diagram_explanation Diagram Explanation
This diagram illustrates the high-level architectural flow of the application.

\subsection components Components:
- **Controllers:** Handle user input and orchestrate the flow.
- **Models:** Represent the data and business logic.
- **Views:** Display the data to the user.
- **Services:** Encapsulate business logic and data access.

\subsection flow Flow:
1. A user interacts with a **View** (e.g., through a form).
2. The **View** triggers an action in a **Controller**.
3. The **Controller** interacts with **Services** to perform business logic.
4. **Services** interact with **Models** to manage data.
5. The **Controller** updates the **View** with the results.
*/

/*! \defgroup Controllers Controllers
 *  \brief Handles user input and interacts with Models and Services.
 */

/*! \defgroup Models Models
 *  \brief Represents the data and business logic of the application.
 */

/*! \defgroup Views Views
 *  \brief Displays the data to the user.
 */

/*! \defgroup Services Services
 *  \brief Encapsulates business logic and data access.
 */

/*! \page AdminController Admin Controller
 *  \ingroup Controllers
 *  \brief Handles requests related to Admin functionalities.
 */

/*! \page FacultyController Faculty Controller
 *  \ingroup Controllers
 *  \brief Handles requests related to Faculty functionalities.
 */
```
*/